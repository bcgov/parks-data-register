name: PR Checks (API)
run-name: Run test on PR ${{ github.event.number }} (API)

on:
  pull_request:
    paths: "pdr-api/**"

jobs:
  test:
    runs-on: ubuntu-latest
    environment: dev
    strategy:
      matrix:
        node-version: [18.x]
    defaults:
      run:
        working-directory: "./pdr-api"
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      ### Install if no cache exists ###
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
          cache-dependency-path: "pdr-api/yarn.lock"
      - run: yarn install --silent --frozen-lockfile

      ### Setup AWS SAM 
      - name: Setup AWS SAM
        uses: aws-actions/setup-sam@v2
        with:
          use-intaller: true

      ### Assume AWS IAM Role
      - name: Get AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ca-central-1

      ### SAM Build
      - name: Cache SAM Build
        id: cache-sam-build
        uses: actions/cache@v3
        with:
          path: |
            **${{ vars.PDR_API_DIRECTORY }}/.aws-sam
          key: ${{ github.sha }}-${{ vars.PDR_API_DIRECTORY }}-sam-cache
      - name: Run sam build
        if: steps.cache-sam-build.outputs.cache-hit != 'true'
        run: |
          sam build --cached --parallel
    
      ### Set up DynamoDB local
      - name: Setup DynamoDB Local
        uses: rrainn/dynamodb-action@v3.0.0
        with:
          sharedDb: true
          port: 8000
          cors: '*'

      ### Run Tests
      - name: Run Tests  
        env:
          TABLE_NAME: NameRegister-tests
          IS_OFFLINE: true
          AWS_REGION: local-env
          AWS_ACCESS_KEY_ID: notused
          AWS_SECRET_ACCESS_KEY: notused
        run: jest --coverage
