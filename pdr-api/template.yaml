AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  pdr-api
  SAM deployment for Parks Data Register API
  
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Parameters:
  Stage:
    Type: String
    Default: dev

Resources:

### LAMBDA LAYERS ###
  CommonDependencyLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: pdr-common-dependency-layer
      Description: Parks Data Register Common Dependency Layer
      ContentUri: dependencies/
      CompatibleRuntimes:
        - nodejs14.x
        - nodejs16.x
        - nodejs18.x
      LicenseInfo: 'MIT'
      RetentionPolicy: Retain
    Metadata:
      BuildMethod: makefile

### LAMBDA FUNCTIONS ###

  # Hello World
  HelloWorldGetLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: handlers/helloworld/GET/
      Handler: index.handler
      Layers:
        - !Ref CommonDependencyLayer
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Description: Hello World GET example lambda function
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ParksDataRegisterMainTable
      Events:
        HelloWorldGet:
          Type: Api
          Properties:
            Path: /helloWorld
            Method: GET
            RestApiId: !Ref ApiDeployment       

  HelloWorldPostLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: handlers/helloworld/POST/
      Handler: index.handler
      Layers:
        - !Ref CommonDependencyLayer
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Description: Hello World POST example lambda function
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ParksDataRegisterMainTable
      Events:
        HelloWorldPost:
          Type: Api
          Properties:
            Path: /helloWorld
            Method: POST  
            RestApiId: !Ref ApiDeployment           

  HelloWorldPutLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: handlers/helloworld/PUT/
      Handler: index.handler
      Layers:
        - !Ref CommonDependencyLayer
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Description: Hello World PUT example lambda function
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ParksDataRegisterMainTable
      Events:
        HelloWorldPut:
          Type: Api
          Properties:
            Path: /helloWorld
            Method: PUT       
            RestApiId: !Ref ApiDeployment      

  HelloWorldDeleteLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: handlers/helloworld/DELETE/
      Handler: index.handler
      Layers:
        - !Ref CommonDependencyLayer
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Description: Hello World DELETE example lambda function
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ParksDataRegisterMainTable
      Events:
        HelloWorldDelete:
          Type: Api
          Properties:
            Path: /helloWorld
            Method: DELETE    
            RestApiId: !Ref ApiDeployment         

### DYNAMODB TABLES ###
  ParksDataRegisterMainTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      TableName: pdr-main
      AttributeDefinitions:
        - AttributeName: pk
          AttributeType: S
        - AttributeName: sk
          AttributeType: S
      KeySchema:
        - AttributeName: pk
          KeyType: HASH
        - AttributeName: sk
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST

  ### API ###
  ApiDeployment:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Stage

  # ParksDataRegisterMetaTable:
  #   Type: AWS::DynamoDB::Table
  #   DeletionPolicy: Retain
  #   Properties:
  #     TableName: pdr-meta
  #     AttributeDefinitions:
  #       - AttributeName: pk
  #         AttributeType: S
  #       - AttributeName: sk
  #         AttributeType: S
  #     KeySchema:
  #       - AttributeName: pk
  #         KeyType: HASH
  #       - AttributeName: sk
  #         KeyType: RANGE
  #     BillingMode: PAY_PER_REQUEST
  #     ProvisionedThroughput:
  #       ReadCapacityUnits: 0
  #       WriteCapacityUnitys: 0

Outputs:
  ApiDeployment:
    Description: "API Gateway endpoint URL for Stage for Hello World function"
    Value: !Sub "https://${ApiDeployment}.execute-api.${AWS::Region}.amazonaws.com/${Stage}/helloWorld/"
#   # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
#   # Find out more about other implicit resources you can reference within SAM
#   # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
#   HelloWorldApi:
#     Description: "API Gateway endpoint URL for Prod stage for Hello World function"
#     Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
#   HelloWorldFunction:
#     Description: "Hello World Lambda Function ARN"
#     Value: !GetAtt HelloWorldFunction.Arn
#   HelloWorldFunctionIamRole:
#     Description: "Implicit IAM Role created for Hello World function"
#     Value: !GetAtt HelloWorldFunctionRole.Arn
