name: Deploy PDR-API Prod

run-name: Deploying ${{ github.ref_name }} (API) to prod

on:
  workflow_dispatch:
    inputs:
      releaseTag:
        description: "Tag of version to be promoted to prod"
        required: true

permissions:
  id-token: write
  contents: read

jobs:
  deploy-api:
    runs-on: ubuntu-latest
    environment: prod
    strategy:
      matrix:
        node-version: [18.x]
    defaults:
      run:
        working-directory: "./${{ vars.PDR_API_DIRECTORY }}"
    steps:
      ### Checkout GitHub Repo
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          ref: ${{ github.events.inputs.releaseTag }}

      - shell: bash
        env:
          SECRET_URL: ${{ secrets.rocketchatURL }}
        run: |
          curl -X POST -H 'Content-Type: application/json' $SECRET_URL --data '{"text":"Data Register","emoji": ":warning:", "attachments":[{"title": "Github Action", "color": "#E5cd69", "fields": [{"title": "Deploy API Prod", "value": "started", "short": true}]}]}'

      ### Tag not found
      - name: Tag not found
        if: ${{ failure() }}
        run: |
          echo "::error::Git Tag not found, please double check input"
          exit 1

      ### Setup AWS SAM
      - name: Setup AWS SAM
        uses: aws-actions/setup-sam@v2
        with:
          use-installer: true

      ### Assume AWS IAM Role
      - name: Get AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ vars.AWS_REGION }}

      ### SAM Build
      - name: Cache SAM Build
        id: cache-sam-build
        uses: actions/cache@v3
        with:
          path: |
            **${{ vars.PDR_API_DIRECTORY }}/.aws-sam
          key: ${{ github.sha }}-${{ vars.PDR_API_DIRECTORY }}-sam-cache
      - name: Run sam build
        if: steps.cache-sam-build.outputs.cache-hit != 'true'
        run: |
          sam build --cached

      ### Prevent prompts and failure when the stack is unchanged
      - name: SAM deploy
        env:
          STACK_NAME: ${{ vars.PDR_API_STACK_NAME }}
          STAGE: ${{ vars.PDR_API_STAGE }}
        run: |
          sam deploy --stack-name $STACK_NAME --no-confirm-changeset --no-fail-on-empty-changeset --parameter-overrides "Stage=$STAGE"

      - shell: bash
        env:
          SECRET_URL: ${{ secrets.rocketchatURL }}
        run: |
          curl -X POST -H 'Content-Type: application/json' $SECRET_URL --data '{"text":"Data Register","emoji": ":warning:", "attachments":[{"title": "Github Action", "color": "#E5cd69", "fields": [{"title": "Deploy API Prod", "value": "complete", "short": true}]}]}'
