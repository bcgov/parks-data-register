AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  pdr-api
  SAM deployment for Parks Data Register API

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Parameters:
  Stage:
    Type: String
    Default: api

Resources:
  ### LAMBDA LAYERS ###
  BaseLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: base
      Description: Parks Data Register Base Layer
      ContentUri: layers/base/
      CompatibleRuntimes:
        - nodejs18.x
      LicenseInfo: "Apache-2.0"
      RetentionPolicy: Retain
    Metadata:
      BuildMethod: makefile

  DynamoDBLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: dynamodb
      Description: Parks Data Register DynamoDB Utilities Layer
      ContentUri: layers/dynamodb/
      CompatibleRuntimes:
        - nodejs18.x
      LicenseInfo: "Apache-2.0"
      RetentionPolicy: Retain
    Metadata:
      BuildMethod: makefile

  PermissionsLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: permissions
      Description: Parks Data Register Permissions Utilities Layer
      ContentUri: layers/permissions/
      CompatibleRuntimes:
        - nodejs18.x
      LicenseInfo: "Apache-2.0"
      RetentionPolicy: Retain
    Metadata:
      BuildMethod: makefile

  ### LAMBDA FUNCTIONS ###

  # Config
  ConfigGet:
    FunctionName: ConfigGet
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: handlers/config/GET
      Handler: index.handler
      Layers:
        - !Ref BaseLayer
        - !Ref DynamoDBLayer
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Description: Config GET lambda function
      Environment:
        Variables:
          TABLE_NAME: !Ref NameRegister
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref NameRegister
      Events:
        ConfigGet:
          Type: Api
          Properties:
            Path: /config
            Method: GET
            RestApiId: !Ref ApiDeployment

  # Config
  DetailsGet:
    FunctionName: DetailsGet
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: handlers/details/GET
      Handler: index.handler
      Layers:
        - !Ref BaseLayer
        - !Ref DynamoDBLayer
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      MemorySize: 128
      Timeout: 100
      Description: Details GET lambda function
      Environment:
        Variables:
          TABLE_NAME: !Ref NameRegister
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref NameRegister
      Events:
        DetailsGet:
          Type: Api
          Properties:
            Path: /details
            Method: GET
            RestApiId: !Ref ApiDeployment

  ### API ###
  ApiDeployment:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Stage

  ### DYNAMODB TABLES ###
  ProcessDynamoDBStream:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: handlers/dynamoStream/
      Handler: index.handler
      Layers:
        - !Ref BaseLayer
        - !Ref DynamoDBLayer
      Runtime: nodejs18.x
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref NameRegister
      Environment:
        Variables:
          LOG_LEVEL: info
      Events:
        Stream:
          Type: DynamoDB
          Properties:
            Stream: !GetAtt NameRegister.StreamArn
            BatchSize: 100
            StartingPosition: TRIM_HORIZON

  NameRegister:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: pk
          KeyType: HASH
        - AttributeName: sk
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: pk
          AttributeType: S
        - AttributeName: sk
          AttributeType: S
        - AttributeName: legalName
          AttributeType: S
        - AttributeName: displayName
          AttributeType: S
        - AttributeName: status
          AttributeType: S
      GlobalSecondaryIndexes:
        - IndexName: ByLegalName
          KeySchema:
            - AttributeName: legalName
              KeyType: HASH
          Projection:
            ProjectionType: ALL
        - IndexName: ByDisplayName
          KeySchema:
            - AttributeName: displayName
              KeyType: HASH
          Projection:
            ProjectionType: ALL
        - IndexName: ByStatusOfOrcs
          KeySchema:
            - AttributeName: status
              KeyType: HASH
            - AttributeName: pk
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
      BillingMode: PAY_PER_REQUEST
      TableName: NameRegister
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
  Audit:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: pk
          KeyType: HASH
        - AttributeName: sk
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: pk
          AttributeType: S
        - AttributeName: sk
          AttributeType: S
        - AttributeName: gsipk
          AttributeType: S
      GlobalSecondaryIndexes:
        - IndexName: gsi1
          KeySchema:
            - AttributeName: gsipk
              KeyType: HASH
            - AttributeName: pk
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
      BillingMode: PAY_PER_REQUEST
      TableName: Audit
    DependsOn: NameRegister

Outputs:
  #   # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  #   # Find out more about other implicit resources you can reference within SAM
  #   # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  ApiDeployment:
    Description: "API Gateway endpoint URL for Stage for Config function"
    Value: !Sub "https://${ApiDeployment}.execute-api.${AWS::Region}.amazonaws.com/${Stage}/config/"
