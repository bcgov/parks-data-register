AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  pdr-admin

  SAM Template for Angular Admin Frontend

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
    MemorySize: 128

Parameters:
  OriginPath:
    Type: String
    Default: local
    Description: Cloudfront distribution origin path.
  OriginId:
    Type: String
    Default: s3-pdr-admin
    Description: Cloudfront distribution origin ID.
  DistBucketName:
    Type: String
    Default: pdr-admin
    Description: S3 bucket that stores Angular Distributions.
  ProductName:
    Type: String
    Default: PDR Admin
    Description: Human readable name of the project.
  AWSRegion:
    Type: String
    Default: ca-central-1
    Description: AWS Region.
  ApiStage:
    Type: String
    Description: API stage.
  RestApiId:
    Type: String
    Description: ID for rest API.

Resources:
  CloudFrontOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: CloudFront access identity
  CloudFrontDistribution:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:
        CustomErrorResponses:
          - ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: "/index.html"
          - ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: "/index.html"
        # Aliases:
        #   - !Ref DomainName
        Comment: !Sub Cloudfront distribution for ${ProductName}
        DefaultRootObject: "index.html"
        Enabled: true
        HttpVersion: http2
        # List of origins that Cloudfront will connect to
        Origins:
          - Id: !Ref OriginId
            DomainName: !GetAtt S3Bucket.DomainName
            S3OriginConfig:
              # Restricting Bucket access through an origin access identity
              OriginAccessIdentity: !Sub "origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}"
            OriginPath: !Sub /${OriginPath}
          - Id: api
            DomainName: !Sub "${RestApiId}.execute-api.${AWSRegion}.amazonaws.com"
            OriginPath: !Sub /${ApiStage}
            CustomOriginConfig:
              HTTPSPort: 443
              OriginProtocolPolicy: https-only
              OriginSSLProtocols:
                - TLSv1.2
        # To connect the CDN to the origins you need to specify behaviours
        DefaultCacheBehavior:
          # Compress resources automatically ( gzip )
          Compress: "true"
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          ForwardedValues:
            QueryString: false
          TargetOriginId: !Ref OriginId
          ViewerProtocolPolicy: redirect-to-https
        # ViewerCertificate:
        #   AcmCertificateArn: !Ref CertificateManagerCertificate
        #   MinimumProtocolVersion: TLSv1.1_2016
        #   SslSupportMethod: sni-only

  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref DistBucketName

  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${CloudFrontOriginAccessIdentity}
            Action: "s3:GetObject"
            Resource: !Sub "arn:aws:s3:::${S3Bucket}/*"

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  Website:
    Value: !GetAtt CloudFrontDistribution.DomainName
